Index: app/src/main/java/com/example/view/DrawingView.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.view\r\n\r\nimport android.annotation.SuppressLint\r\nimport android.content.Context\r\nimport android.graphics.Canvas\r\nimport android.graphics.Color\r\nimport android.graphics.Paint\r\nimport android.util.AttributeSet\r\nimport android.util.Log\r\nimport android.view.SurfaceView\r\nimport model.Game\r\nimport model.Position\r\n\r\nclass DrawingView @JvmOverloads constructor (context: Context, attributes: AttributeSet? = null,\r\n                                             defStyleAttr: Int = 0): SurfaceView(context, attributes,defStyleAttr){\r\n    val backgroundPaint = Paint()\r\n    //var square1: Square = Square(null)\r\n\r\n    @SuppressLint(\"DrawAllocation\")\r\n    override fun onDraw(canvas: Canvas?) {\r\n        super.onDraw(canvas)\r\n        backgroundPaint.color = Color.WHITE\r\n        canvas?.drawRect(0F, 0F, width.toFloat(), height.toFloat(),\r\n            backgroundPaint)\r\n\r\n       /* for(YSquares in Game.levels[Game.currentLevel].board.squares){\r\n            for(XSquares in YSquares){\r\n                XSquares?.draw(canvas, Position(i,j))\r\n                i+=1\r\n            }\r\n            j += 1\r\n        }\r\n\r\n        for(var i = 0; i < Game.levels[Game.currentLevel].board.squares.size; i++){\r\n                for(var j = 0; j < Game.levels[Game.currentLevel].board.squares[0].size; j++){\r\n                Game.levels[Game.currentLevel].board.squares[i][j]\r\n                var variable = Game.levels[Game.currentLevel].board.squares[i][j]\r\n                variable.draw(canvas, Position(i,j)\r\n            }\r\n        }*/\r\n\r\n\r\n\r\n        // Iteration on the 2D matrix\r\n        Game.levels[Game.selectedLevel].board.squares.forEachIndexed { i, arrayOfSquares ->\r\n            arrayOfSquares.forEachIndexed { j, square ->\r\n                square?.draw(canvas, Position(j,i), this) // Drawing the squares\r\n            }\r\n        }\r\n        /*\r\n        for(i in 0..Game.levels[Game.currentLevel].board.squares.size){\r\n             for(j in 0..Game.levels[Game.currentLevel].board.squares[i].size){\r\n                Log.d(\"LOL\", \"i : $i j :$j\")\r\n        }\r\n        }*/\r\n\r\n        // Drawing characters\r\n        for(character in Game.levels[Game.selectedLevel].characters){\r\n            character.draw(canvas, this)\r\n        }\r\n        //Global.level0.board.squares[0][1].draw(canvas)\r\n        // Updating the progressbar\r\n        /*var progressBar = findViewById<ProgressBar>(R.id.progressBar)\r\n        var currentLife = Game.levels[Game.selectedLevel].lifeBar\r\n        ObjectAnimator.ofInt(progressBar, \"Life\", currentLife)\r\n            .setDuration(1000)\r\n            .start()*/\r\n\r\n\r\n        // UI SECTION\r\n        this.drawUI(canvas)\r\n        GameActivity.checkStatus() // Checking status\r\n\r\n\r\n\r\n\r\n    }\r\n    private fun drawUI(canvas: Canvas?){\r\n        // Drawing life left text\r\n        val paint = Paint()\r\n        var color = Color.BLACK\r\n        paint.color = color\r\n        paint.textSize = 60F;\r\n\r\n        // Drawing the Moves left\r\n        canvas?.drawText(\"Moves Left : \" + Game.levels[Game.selectedLevel].movesLeft.toString(), 200f, height.toFloat() - 250, paint);\r\n        // drawing life left text\r\n        canvas?.drawText(\"Life : \", 200f, height.toFloat() - 150, paint);\r\n\r\n        // Drawing the life points\r\n        paint.color = Color.BLUE\r\n        for(i in 0 until Game.levels[Game.selectedLevel].lifeBar){\r\n            canvas?.drawCircle(400f + i.toFloat()*110, height.toFloat() - 180, 30f, paint);\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/view/DrawingView.kt	(revision 1cfc98a503f67136e383fc15206049ceeb251a62)
+++ app/src/main/java/com/example/view/DrawingView.kt	(date 1619370524117)
@@ -69,8 +69,7 @@
 
         // UI SECTION
         this.drawUI(canvas)
-        GameActivity.checkStatus() // Checking status
-
+        // Checking status
 
 
 
